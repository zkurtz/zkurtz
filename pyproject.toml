[project]
name = "zkurtz"
version = "0.1.0"
description = "Python code ideas incubator."
authors = [{ name = "Zach Kurtz", email = "zkurtz@gmail.com" }]
readme = "README.md"
requires-python = ">=3.12"

[dependency-groups]
dev = [
  "pre-commit==4.0.1",
  "pyright==1.1.391",
  "ruff==0.8.5",
  "pytest==8.3.4",
  "bump-my-version>=0.30.0",
]

[project.urls]
Source = "https://github.com/zkurtz/pandahandler"

[tool.uv]
package = true

[tool.bumpversion]
current_version = "0.8.0"
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)"
serialize = ["{major}.{minor}.{patch}"]
tag = false
allow_dirty = true
commit = false

[[tool.bumpversion.files]]
filename = "pyproject.toml"
search = 'version = "{current_version}"'
replace = 'version = "{new_version}"'

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pytest.ini_options]
testpaths = ["zkurtz",]
addopts = "--import-mode=importlib"

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = [
  # ruff defaults:
  "E4", "E7", "E9", "F",
  # additional rule groups:
  "ANN", # require pyright type annotations
  "D", # google-style docstrings
  "E5", # pycodestyle line formatting including line length
  "I", # flake8-import-order
  "TID", # flake8-tidy-imports
]
ignore = [
  "ANN002", # Missing type annotation for *args
  "ANN003", # Missing type annotation for **kwargs
  "ANN401", # Dynamically typed expressions (typing.Any) are disallowed in `**kwargs`
  "D202", # would require one blank line after the last section of a multi-line docstring
  "D203", # would require one blank line at start of class docstring
  "D213", # would require multi-line docstring to start with a hard return
  "D401", # would require imperative mood in docstring
  "D413", # would put blank line at end of each multiline docstring
]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["D104"] # would require module-level documentation
"test_*.py" = [
  "ANN201", # requires return type
  "D",
]
